/*
Задание: Мини-игра “Угадай число” с попытками и жизнями

Описание:
	1.	В начале программы создай переменные, которые будут хранить текущее состояние игры:
		•	lives — количество оставшихся жизней (изначально 5). Эта переменная будет уменьшаться при каждой неудачной попытке.
		•	targetNumber — загаданное число, которое программа должна сгенерировать случайным образом при запуске игры (число от 1 до 50).
		•	gameOver — переменная-флаг (изначально false), которая указывает, завершена ли игра.
	2.	Эти переменные объяви за пределами функций (глобально), чтобы их значения можно было использовать и изменять из любой функции.
	3.	Напиши функции:
		•	startGame():
			•	С помощью генерации случайного числа задай значение для переменной targetNumber (число от 1 до 50).
			•	Сбрось значение lives до 5.
			•	Установи gameOver в false.
			•	Выведи сообщение: «Игра началась! Угадайте число от 1 до 50».
		•	makeGuess(number):
			•	Проверь, завершена ли игра. Если она завершена (gameOver), выведи сообщение: «Игра уже завершена. Запустите игру заново».
			•	Сравни число пользователя с загаданным числом:
				•	Если число больше, чем нужно, выведи подсказку: «Меньше».
				•	Если число меньше, чем нужно, выведи подсказку: «Больше».
				•	Если пользователь угадал, выведи сообщение: «Поздравляю, вы угадали число!» и завершите игру, установив gameOver = true.
			•	Уменьши количество жизней на 1 при каждой неправильной попытке. Если попытки закончились (lives = 0), выведи: «Игра окончена! Вы проиграли!» и завершите игру, установив gameOver = true.
		•	restartGame():
			•	Сбрось значения всех переменных (lives, gameOver) и сгенерируй новое загаданное число.
			•	Выведи сообщение: «Игра началась! Угадайте число от 1 до 50».
	4.	Тестируй функции, вызывая их в следующем порядке:
		•	startGame()
			•	Несколько раз вызови makeGuess(number) для проверки условий.
			•	После окончания вызови restartGame() и повтори игру.

Пример результата:
	1.	startGame()
Консоль: «Игра началась! Угадайте число от 1 до 50».
	2.	makeGuess(25)
Консоль: «Подсказка: меньше».
Консоль: «Осталось жизней: 4».
	3.	makeGuess(15)
Консоль: «Подсказка: больше».
Консоль: «Осталось жизней: 3».
	4.	makeGuess(20)
Консоль: «Поздравляю, вы угадали число!»
	5.	restartGame()
Консоль: «Игра началась! Угадайте число от 1 до 50».

Теория:
	1.	Глобальные переменные:
	•	Глобальная переменная объявляется за пределами функций и доступна из любого места программы.
	•	Глобальные переменные сохраняют своё значение между вызовами функций, поэтому они удобны для хранения данных, которые используются в разных частях программы.
	2.	Генерация случайных чисел:
	•	Для генерации случайного числа от 1 до 50 можно использовать формулу:
		Math.floor(Math.random() * 50) + 1.
	•	Здесь Math.random() возвращает число от 0 до 1, а умножение на 50 и прибавление 1 создаёт нужный диапазон.

Цель:
	1.	Увидеть, как глобальные переменные используются для хранения состояния игры и взаимодействия между функциями.
	2.	Понять, как обновлять значения глобальных переменных внутри функций.
	3.	Научиться организовывать логику игры через переменные и условия.

Теперь задание полное, с добавленной теорией. Как вам?
*/
lives = 5
targetNumber = Math.floor(Math.random() * 50) + 1
gameOver = false
function startGame() {
	lives = 5
	targetNumber = Math.floor(Math.random() * 50) + 1
	gameOver = false
	console.log("Game started, guess the number 1-50!",{targetNumber});
}
function makeGuess(number) {
	if (gameOver === true) {
		console.log("Game has been ended!");
		return
	}
	if (number === targetNumber) {
		console.log("Congrats, you won!");
		gameOver = true
		return
	} else if (number > targetNumber) {
		console.log("Lower");
    } else {
        console.log("Higher");
	}
	lives--
	if (lives === 0) {
		console.log("You lost!");
		gameOver = true
	} else if (gameOver === false) {
		console.log("Lives left:", lives);
	}
}
function restartGame() {
	console.log("Game restarted!");
	startGame();
}
startGame()
makeGuess(12)
makeGuess(46)
makeGuess(14)
makeGuess(2)
makeGuess(9)
makeGuess(32)
restartGame()
makeGuess(26)